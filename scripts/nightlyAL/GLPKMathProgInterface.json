{"gitdate":"2015-09-18 23:09:38 -0400","exit_code":"0","name":"GLPKMathProgInterface","jlver":"0.4","gitsha":"e2c23adbc3ed81c9dd8096b22df27d3038c2bca2","status":"tests_pass","version":"0.1.15","url":"http://github.com/JuliaOpt/GLPKMathProgInterface.jl","log":">>> 'Pkg.add(\"GLPKMathProgInterface\")' log\nINFO: Installing GLPK v0.2.17\nINFO: Installing GLPKMathProgInterface v0.1.15\nINFO: Installing MathProgBase v0.3.17\nINFO: Building GLPK\nINFO: Package database updated\nINFO: METADATA is out-of-date â€” you may not have the latest version of GLPKMathProgInterface\nINFO: Use `Pkg.update()` to get the latest versions of your packages\n\n>>> 'Pkg.test(\"GLPKMathProgInterface\")' log\nJulia Version 0.4.0-rc2+10\nCommit d8930a0 (2015-09-20 15:38 UTC)\nPlatform Info:\n  System: Linux (x86_64-unknown-linux-gnu)\n  CPU: Intel(R) Core(TM) i7-6700K CPU @ 4.00GHz\n  WORD_SIZE: 64\n  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Prescott)\n  LAPACK: libopenblas\n  LIBM: libopenlibm\n  LLVM: libLLVM-3.3\nINFO: Testing GLPKMathProgInterface\nTesting linprog with solver GLPKMathProgInterface.GLPKInterfaceLP.GLPKSolverLP\nWARNING: Element type Int64 does not have an infinite value. Note that this may artifically introduce ranged (two-sided) constraints. To avoid this, consider casting the problem data to Float64.\nPassed\nTesting mixintprog with solver GLPKMathProgInterface.GLPKInterfaceMIP.GLPKSolverMIP\nDone\nINFO: GLPKMathProgInterface tests passed\n\n>>> End of log","licfile":"LICENSE.md","license":"MIT"}