{"gitdate":"2015-09-03 12:43:33 -0400","exit_code":"0","name":"ForwardDiff","jlver":"0.4","gitsha":"1b5cf91ff103bb7e40ab650dd5fe0c6a74e304c8","status":"tests_pass","version":"0.1.0","url":"http://github.com/JuliaDiff/ForwardDiff.jl","log":">>> 'Pkg.add(\"ForwardDiff\")' log\nINFO: Cloning cache of ForwardDiff from git://github.com/JuliaDiff/ForwardDiff.jl.git\nINFO: Installing Calculus v0.1.10\nINFO: Installing ForwardDiff v0.1.0\nINFO: Installing NaNMath v0.1.0\nINFO: Package database updated\nINFO: METADATA is out-of-date â€” you may not have the latest version of ForwardDiff\nINFO: Use `Pkg.update()` to get the latest versions of your packages\n\n>>> 'Pkg.test(\"ForwardDiff\")' log\nJulia Version 0.4.0-rc2+10\nCommit d8930a0 (2015-09-20 15:38 UTC)\nPlatform Info:\n  System: Linux (x86_64-unknown-linux-gnu)\n  CPU: Intel(R) Core(TM) i7-6700K CPU @ 4.00GHz\n  WORD_SIZE: 64\n  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Prescott)\n  LAPACK: libopenblas\n  LIBM: libopenlibm\n  LLVM: libLLVM-3.3\nINFO: Testing ForwardDiff\nWARNING: Base.Uint64 is deprecated, use UInt64 instead.\nWARNING: Base.Uint64 is deprecated, use UInt64 instead.\nWARNING: Base.MathConst is deprecated, use Base.Irrational instead.\nWARNING: Base.MathConst is deprecated, use Base.Irrational instead.\nWARNING: Base.Uint64 is deprecated, use UInt64 instead.\nWARNING: Base.Uint64 is deprecated, use UInt64 instead.\nTesting GradientNumbers and ForwardDiff.gradient...Done (took 5.55284667 seconds).\nTesting HessianNumbers and ForwardDiff.hessian...Done (took 10.607539514 seconds).\nTesting TensorNumbers and ForwardDiff.tensor...Done (took 5.052986892 seconds).\nTesting ForwardDiff.derivative...Done (took 3.556383804 seconds).\nTesting ForwardDiff.jacobian...Done (took 4.371710556 seconds).\nTesting deprecation wrapper (deprecation warnings are expected)...\nWARNING: forwarddiff_gradient!(f::Function,T::DataType; fadtype::Symbol=:dual,args...) is deprecated, use depr_inplace_fad(ForwardDiff.gradient,f) instead.\n in depwarn at deprecated.jl:73\n in forwarddiff_gradient! at deprecated.jl:50\n in include at ./boot.jl:261\n in include_from_node1 at ./loading.jl:304\n in include at ./boot.jl:261\n in include_from_node1 at ./loading.jl:304\n in process_options at ./client.jl:308\n in _start at ./client.jl:411\nwhile loading /home/vagrant/.julia/v0.4/ForwardDiff/test/test_deprecated.jl, in expression starting on line 18\nWARNING: Addendum to the deprecation warning above:\nThe depr_inplace_fad function is actually only meant to be used to patch over the old API for mutating functions. Instead of:\n\tdeprecated_inplace_fad(ForwardDiff.gradient, testf)\nYou should use the following:\n\tForwardDiff.gradient(testf, mutates=true)\nBe aware that mutating functions created with the new API take in the output array as the 1st argument rather than the 2nd.\nWARNING: forwarddiff_gradient(f::Function,T::DataType; fadtype::Symbol=:dual,args...) is deprecated, use ForwardDiff.gradient(f,mutates=false) instead.\n in depwarn at deprecated.jl:73\n in forwarddiff_gradient at deprecated.jl:50\n in include at ./boot.jl:261\n in include_from_node1 at ./loading.jl:304\n in include at ./boot.jl:261\n in include_from_node1 at ./loading.jl:304\n in process_options at ./client.jl:308\n in _start at ./client.jl:411\nwhile loading /home/vagrant/.julia/v0.4/ForwardDiff/test/test_deprecated.jl, in expression starting on line 22\nWARNING: forwarddiff_jacobian!(f::Function,T::DataType; fadtype::Symbol=:dual,args...) is deprecated, use depr_inplace_fad(ForwardDiff.jacobian,f) instead.\n in depwarn at deprecated.jl:73\n in forwarddiff_jacobian! at deprecated.jl:50\n in include at ./boot.jl:261\n in include_from_node1 at ./loading.jl:304\n in include at ./boot.jl:261\n in include_from_node1 at ./loading.jl:304\n in process_options at ./client.jl:308\n in _start at ./client.jl:411\nwhile loading /home/vagrant/.julia/v0.4/ForwardDiff/test/test_deprecated.jl, in expression starting on line 39\nWARNING: both Calculus and ForwardDiff export \"jacobian\"; uses of it in module Main must be qualified\nWARNING: Addendum to the deprecation warning above:\nThe depr_inplace_fad function is actually only meant to be used to patch over the old API for mutating functions. Instead of:\n\tdeprecated_inplace_fad(ForwardDiff.jacobian, jactestf)\nYou should use the following:\n\tForwardDiff.jacobian(jactestf, mutates=true)\nBe aware that mutating functions created with the new API take in the output array as the 1st argument rather than the 2nd.\nWARNING: forwarddiff_jacobian(f::Function,T::DataType; fadtype::Symbol=:dual,args...) is deprecated, use ForwardDiff.jacobian(f,mutates=false) instead.\n in depwarn at deprecated.jl:73\n in forwarddiff_jacobian at deprecated.jl:50\n in include at ./boot.jl:261\n in include_from_node1 at ./loading.jl:304\n in include at ./boot.jl:261\n in include_from_node1 at ./loading.jl:304\n in process_options at ./client.jl:308\n in _start at ./client.jl:411\nwhile loading /home/vagrant/.julia/v0.4/ForwardDiff/test/test_deprecated.jl, in expression starting on line 43\nWARNING: forwarddiff_hessian!(f::Function,T::DataType; fadtype::Symbol=:dual,args...) is deprecated, use depr_inplace_fad(ForwardDiff.hessian,f) instead.\n in depwarn at deprecated.jl:73\n in forwarddiff_hessian! at deprecated.jl:50\n in include at ./boot.jl:261\n in include_from_node1 at ./loading.jl:304\n in include at ./boot.jl:261\n in include_from_node1 at ./loading.jl:304\n in process_options at ./client.jl:308\n in _start at ./client.jl:411\nwhile loading /home/vagrant/.julia/v0.4/ForwardDiff/test/test_deprecated.jl, in expression starting on line 60\nWARNING: both Calculus and ForwardDiff export \"hessian\"; uses of it in module Main must be qualified\nWARNING: Addendum to the deprecation warning above:\nThe depr_inplace_fad function is actually only meant to be used to patch over the old API for mutating functions. Instead of:\n\tdeprecated_inplace_fad(ForwardDiff.hessian, hess_testf)\nYou should use the following:\n\tForwardDiff.hessian(hess_testf, mutates=true)\nBe aware that mutating functions created with the new API take in the output array as the 1st argument rather than the 2nd.\nWARNING: forwarddiff_hessian(f::Function,T::DataType; fadtype::Symbol=:dual,args...) is deprecated, use ForwardDiff.hessian(f,mutates=false) instead.\n in depwarn at deprecated.jl:73\n in forwarddiff_hessian at deprecated.jl:50\n in include at ./boot.jl:261\n in include_from_node1 at ./loading.jl:304\n in include at ./boot.jl:261\n in include_from_node1 at ./loading.jl:304\n in process_options at ./client.jl:308\n in _start at ./client.jl:411\nwhile loading /home/vagrant/.julia/v0.4/ForwardDiff/test/test_deprecated.jl, in expression starting on line 64\nWARNING: forwarddiff_tensor!(f::Function,T::DataType; fadtype::Symbol=:dual,args...) is deprecated, use depr_inplace_fad(ForwardDiff.tensor,f) instead.\n in depwarn at deprecated.jl:73\n in forwarddiff_tensor! at deprecated.jl:50\n in include at ./boot.jl:261\n in include_from_node1 at ./loading.jl:304\n in include at ./boot.jl:261\n in include_from_node1 at ./loading.jl:304\n in process_options at ./client.jl:308\n in _start at ./client.jl:411\nwhile loading /home/vagrant/.julia/v0.4/ForwardDiff/test/test_deprecated.jl, in expression starting on line 75\nWARNING: Addendum to the deprecation warning above:\nThe depr_inplace_fad function is actually only meant to be used to patch over the old API for mutating functions. Instead of:\n\tdeprecated_inplace_fad(ForwardDiff.tensor, testf)\nYou should use the following:\n\tForwardDiff.tensor(testf, mutates=true)\nBe aware that mutating functions created with the new API take in the output array as the 1st argument rather than the 2nd.\nWARNING: forwarddiff_tensor(f::Function,T::DataType; fadtype::Symbol=:dual,args...) is deprecated, use ForwardDiff.tensor(f,mutates=false) instead.\n in depwarn at deprecated.jl:73\n in forwarddiff_tensor at deprecated.jl:50\n in include at ./boot.jl:261\n in include_from_node1 at ./loading.jl:304\n in include at ./boot.jl:261\n in include_from_node1 at ./loading.jl:304\n in process_options at ./client.jl:308\n in _start at ./client.jl:411\nwhile loading /home/vagrant/.julia/v0.4/ForwardDiff/test/test_deprecated.jl, in expression starting on line 79\nDone (took 0.317549714 seconds).\nINFO: ForwardDiff tests passed\n\n>>> End of log","licfile":"LICENSE.md","license":"MIT"}