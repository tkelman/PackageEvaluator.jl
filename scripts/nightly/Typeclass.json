{"gitdate":"2014-11-07 13:49:42 -0500","exit_code":"0","name":"Typeclass","jlver":"0.4","gitsha":"eafbd17db92a1a1499abb3cec3440c7fc3b88298","status":"tests_pass","version":"0.0.1","url":"http://github.com/jasonmorton/Typeclass.jl","log":">>> 'Pkg.add(\"Typeclass\")' log\nINFO: Cloning cache of Typeclass from git://github.com/jasonmorton/Typeclass.jl.git\nINFO: Installing Typeclass v0.0.1\nINFO: Package database updated\nINFO: METADATA is out-of-date â€” you may not have the latest version of Typeclass\nINFO: Use `Pkg.update()` to get the latest versions of your packages\n\n>>> 'Pkg.test(\"Typeclass\")' log\nJulia Version 0.4.0-rc2+10\nCommit d8930a0 (2015-09-20 15:38 UTC)\nPlatform Info:\n  System: Linux (x86_64-unknown-linux-gnu)\n  CPU: Intel(R) Core(TM) i7-6700K CPU @ 4.00GHz\n  WORD_SIZE: 64\n  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Prescott)\n  LAPACK: libopenblas\n  LIBM: libopenlibm\n  LLVM: libLLVM-3.3\nINFO: Testing Typeclass\n\nWARNING: deprecated syntax \"{}\" at /home/vagrant/.julia/v0.4/Typeclass/src/Typeclass.jl:29.\nUse \"[]\" instead.\n\nWARNING: deprecated syntax \"{}\" at /home/vagrant/.julia/v0.4/Typeclass/src/Typeclass.jl:120.\nUse \"[]\" instead.\nWARNING: module Main should explicitly import == from Base\nWARNING: Dict{K,V}(ks::Tuple{Vararg{K}},vs::Tuple{Vararg{V}}) is deprecated, use Dict{K,V}(zip(ks,vs)) instead.\n in depwarn at deprecated.jl:73\n in call at deprecated.jl:50\n in _instance_code at /home/vagrant/.julia/v0.4/Typeclass/src/Typeclass.jl:127\n in include at ./boot.jl:261\n in include_from_node1 at ./loading.jl:304\n in process_options at ./client.jl:308\n in _start at ./client.jl:411\nwhile loading /home/vagrant/.julia/v0.4/Typeclass/test/runtests.jl, in expression starting on line 10\nINFO: Instance delcaration omitted method x::Int == y::Int is already defined, skipping specializing Eq class method\nWARNING: Dict{K,V}(ks::Tuple{Vararg{K}},vs::Tuple{Vararg{V}}) is deprecated, use Dict{K,V}(zip(ks,vs)) instead.\n in depwarn at deprecated.jl:73\n in call at deprecated.jl:50\n in _instance_code at /home/vagrant/.julia/v0.4/Typeclass/src/Typeclass.jl:127\n in include at ./boot.jl:261\n in include_from_node1 at ./loading.jl:304\n in process_options at ./client.jl:308\n in _start at ./client.jl:411\nwhile loading /home/vagrant/.julia/v0.4/Typeclass/test/runtests.jl, in expression starting on line 16\nINFO: Instance delcaration omitted method x::Float64 == y::Float64 is already defined, skipping specializing Eq class method\nWARNING: Dict{K,V}(ks::Tuple{Vararg{K}},vs::Tuple{Vararg{V}}) is deprecated, use Dict{K,V}(zip(ks,vs)) instead.\n in depwarn at deprecated.jl:73\n in call at deprecated.jl:50\n in _instance_code at /home/vagrant/.julia/v0.4/Typeclass/src/Typeclass.jl:130\n in include at ./boot.jl:261\n in include_from_node1 at ./loading.jl:304\n in process_options at ./client.jl:308\n in _start at ./client.jl:411\nwhile loading /home/vagrant/.julia/v0.4/Typeclass/test/runtests.jl, in expression starting on line 28\nINFO: Instance delcaration omitted method x::Bad == y::Bad is already defined, skipping specializing Eq class method\nWARNING: Dict{K,V}(ks::Tuple{Vararg{K}},vs::Tuple{Vararg{V}}) is deprecated, use Dict{K,V}(zip(ks,vs)) instead.\n in depwarn at deprecated.jl:73\n in call at deprecated.jl:50\n in _instance_code at /home/vagrant/.julia/v0.4/Typeclass/src/Typeclass.jl:127\n in include at ./boot.jl:261\n in include_from_node1 at ./loading.jl:304\n in process_options at ./client.jl:308\n in _start at ./client.jl:411\nwhile loading /home/vagrant/.julia/v0.4/Typeclass/test/runtests.jl, in expression starting on line 46\nINFO: Instance delcaration omitted method x::Foo == y::Foo is already defined, skipping specializing Eq class method\nWARNING: Dict{K,V}(ks::Tuple{Vararg{K}},vs::Tuple{Vararg{V}}) is deprecated, use Dict{K,V}(zip(ks,vs)) instead.\n in depwarn at deprecated.jl:73\n in call at deprecated.jl:50\n in _instance_code at /home/vagrant/.julia/v0.4/Typeclass/src/Typeclass.jl:127\n in include at ./boot.jl:261\n in include_from_node1 at ./loading.jl:304\n in process_options at ./client.jl:308\n in _start at ./client.jl:411\nwhile loading /home/vagrant/.julia/v0.4/Typeclass/test/runtests.jl, in expression starting on line 58\nWARNING: module Main should explicitly import != from Base\nWARNING: Dict{K,V}(ks::Tuple{Vararg{K}},vs::Tuple{Vararg{V}}) is deprecated, use Dict{K,V}(zip(ks,vs)) instead.\n in depwarn at deprecated.jl:73\n in call at deprecated.jl:50\n in _instance_code at /home/vagrant/.julia/v0.4/Typeclass/src/Typeclass.jl:130\n in include at ./boot.jl:261\n in include_from_node1 at ./loading.jl:304\n in process_options at ./client.jl:308\n in _start at ./client.jl:411\nwhile loading /home/vagrant/.julia/v0.4/Typeclass/test/runtests.jl, in expression starting on line 86\nINFO: Instance delcaration omitted method x::TestNameEq == y::TestNameEq is already defined, skipping specializing NameEq class method\nINFO: Instance delcaration omitted method x::TestNameEq != y::TestNameEq is already defined, skipping specializing NameEq class method\nWARNING: names(v) is deprecated, use fieldnames(v) instead.\n in depwarn at deprecated.jl:73\n in names at deprecated.jl:50\n in eq at /home/vagrant/.julia/v0.4/Typeclass/test/runtests.jl:67\n in anonymous at test.jl:90\n in do_test at test.jl:50\n in include at ./boot.jl:261\n in include_from_node1 at ./loading.jl:304\n in process_options at ./client.jl:308\n in _start at ./client.jl:411\nwhile loading /home/vagrant/.julia/v0.4/Typeclass/test/runtests.jl, in expression starting on line 89\nWARNING: Dict{K,V}(ks::Tuple{Vararg{K}},vs::Tuple{Vararg{V}}) is deprecated, use Dict{K,V}(zip(ks,vs)) instead.\n in depwarn at deprecated.jl:73\n in call at deprecated.jl:50\n in _instance_code at /home/vagrant/.julia/v0.4/Typeclass/src/Typeclass.jl:130\n in include at ./boot.jl:261\n in include_from_node1 at ./loading.jl:304\n in process_options at ./client.jl:308\n in _start at ./client.jl:411\nwhile loading /home/vagrant/.julia/v0.4/Typeclass/test/runtests.jl, in expression starting on line 90\nWARNING: module Main should explicitly import != from Base\nWARNING: names(v) is deprecated, use fieldnames(v) instead.\n in depwarn at deprecated.jl:73\n in names at deprecated.jl:50\n in eq at /home/vagrant/.julia/v0.4/Typeclass/test/runtests.jl:67\n in == at no file\n in anonymous at test.jl:90\n in do_test at test.jl:50\n in include at ./boot.jl:261\n in include_from_node1 at ./loading.jl:304\n in process_options at ./client.jl:308\n in _start at ./client.jl:411\nwhile loading /home/vagrant/.julia/v0.4/Typeclass/test/runtests.jl, in expression starting on line 91\nWARNING: Dict{K,V}(ks::Tuple{Vararg{K}},vs::Tuple{Vararg{V}}) is deprecated, use Dict{K,V}(zip(ks,vs)) instead.\n in depwarn at deprecated.jl:73\n in call at deprecated.jl:50\n in _instance_code at /home/vagrant/.julia/v0.4/Typeclass/src/Typeclass.jl:127\n in include at ./boot.jl:261\n in include_from_node1 at ./loading.jl:304\n in process_options at ./client.jl:308\n in _start at ./client.jl:411\nwhile loading /home/vagrant/.julia/v0.4/Typeclass/test/runtests.jl, in expression starting on line 100\nWARNING: Dict{K,V}(ks::Tuple{Vararg{K}},vs::Tuple{Vararg{V}}) is deprecated, use Dict{K,V}(zip(ks,vs)) instead.\n in depwarn at deprecated.jl:73\n in call at deprecated.jl:50\n in _instance_code at /home/vagrant/.julia/v0.4/Typeclass/src/Typeclass.jl:127\n in include at ./boot.jl:261\n in include_from_node1 at ./loading.jl:304\n in process_options at ./client.jl:308\n in _start at ./client.jl:411\nwhile loading /home/vagrant/.julia/v0.4/Typeclass/test/runtests.jl, in expression starting on line 116\nWARNING: module Main should explicitly import + from Base\nWARNING: Dict{K,V}(ks::Tuple{Vararg{K}},vs::Tuple{Vararg{V}}) is deprecated, use Dict{K,V}(zip(ks,vs)) instead.\n in depwarn at deprecated.jl:73\n in call at deprecated.jl:50\n in _instance_code at /home/vagrant/.julia/v0.4/Typeclass/src/Typeclass.jl:130\n in include at ./boot.jl:261\n in include_from_node1 at ./loading.jl:304\n in process_options at ./client.jl:308\n in _start at ./client.jl:411\nwhile loading /home/vagrant/.julia/v0.4/Typeclass/test/runtests.jl, in expression starting on line 142\nINFO: Instance delcaration omitted method x::Int + y::Int is already defined, skipping specializing Addable class method\nWARNING: Dict{K,V}(ks::Tuple{Vararg{K}},vs::Tuple{Vararg{V}}) is deprecated, use Dict{K,V}(zip(ks,vs)) instead.\n in depwarn at deprecated.jl:73\n in call at deprecated.jl:50\n in _instance_code at /home/vagrant/.julia/v0.4/Typeclass/src/Typeclass.jl:127\n in include at ./boot.jl:261\n in include_from_node1 at ./loading.jl:304\n in process_options at ./client.jl:308\n in _start at ./client.jl:411\nwhile loading /home/vagrant/.julia/v0.4/Typeclass/test/runtests.jl, in expression starting on line 145\nWARNING: Dict{K,V}(ks::Tuple{Vararg{K}},vs::Tuple{Vararg{V}}) is deprecated, use Dict{K,V}(zip(ks,vs)) instead.\n in depwarn at deprecated.jl:73\n in call at deprecated.jl:50\n in _instance_code at /home/vagrant/.julia/v0.4/Typeclass/src/Typeclass.jl:127\n in include at ./boot.jl:261\n in include_from_node1 at ./loading.jl:304\n in process_options at ./client.jl:308\n in _start at ./client.jl:411\nwhile loading /home/vagrant/.julia/v0.4/Typeclass/test/runtests.jl, in expression starting on line 167\nWARNING: Dict{K,V}(ks::Tuple{Vararg{K}},vs::Tuple{Vararg{V}}) is deprecated, use Dict{K,V}(zip(ks,vs)) instead.\n in depwarn at deprecated.jl:73\n in call at deprecated.jl:50\n in _instance_code at /home/vagrant/.julia/v0.4/Typeclass/src/Typeclass.jl:127\n in include at ./boot.jl:261\n in include_from_node1 at ./loading.jl:304\n in process_options at ./client.jl:308\n in _start at ./client.jl:411\nwhile loading /home/vagrant/.julia/v0.4/Typeclass/test/runtests.jl, in expression starting on line 171\nWARNING: module Main should explicitly import | from Base\nWARNING: Dict{K,V}(ks::Tuple{Vararg{K}},vs::Tuple{Vararg{V}}) is deprecated, use Dict{K,V}(zip(ks,vs)) instead.\n in depwarn at deprecated.jl:73\n in call at deprecated.jl:50\n in _instance_code at /home/vagrant/.julia/v0.4/Typeclass/src/Typeclass.jl:127\n in include at ./boot.jl:261\n in include_from_node1 at ./loading.jl:304\n in process_options at ./client.jl:308\n in _start at ./client.jl:411\nwhile loading /home/vagrant/.julia/v0.4/Typeclass/test/runtests.jl, in expression starting on line 197\nINFO: Instance delcaration omitted method f::Mat | g::Mat is already defined, skipping specializing MonoidalCategory class method\nINFO: Typeclass tests passed\n\n>>> End of log","licfile":"LICENSE.md","license":"MIT"}