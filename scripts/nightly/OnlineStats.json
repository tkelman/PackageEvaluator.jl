{"gitdate":"2015-09-03 22:32:53 -0400","exit_code":"0","name":"OnlineStats","jlver":"0.4","gitsha":"77ada53848a1d3c66923b124471622ff3b175987","status":"tests_pass","version":"0.2.0","url":"http://github.com/joshday/OnlineStats.jl","log":">>> 'Pkg.add(\"OnlineStats\")' log\nINFO: Cloning cache of OnlineStats from git://github.com/joshday/OnlineStats.jl.git\nINFO: Installing Dates v0.4.4\nINFO: Installing Distributions v0.8.6\nINFO: Installing MultivariateStats v0.2.1\nINFO: Installing OnlineStats v0.2.0\nINFO: Installing PDMats v0.3.5\nINFO: Package database updated\n\n>>> 'Pkg.test(\"OnlineStats\")' log\nJulia Version 0.4.0-rc2+10\nCommit d8930a0 (2015-09-20 15:38 UTC)\nPlatform Info:\n  System: Linux (x86_64-unknown-linux-gnu)\n  CPU: Intel(R) Core(TM) i7-6700K CPU @ 4.00GHz\n  WORD_SIZE: 64\n  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Prescott)\n  LAPACK: libopenblas\n  LIBM: libopenlibm\n  LLVM: libLLVM-3.3\nINFO: Computing test dependencies for OnlineStats...\nINFO: Installing FactCheck v0.4.0\nINFO: Installing GLM v0.4.7\nINFO: Installing NumericFuns v0.2.3\nINFO: Testing OnlineStats\nWARNING: Base.FloatingPoint is deprecated, use AbstractFloat instead.\nWARNING: Union(args...) is deprecated, use Union{args...} instead.\n in depwarn at deprecated.jl:73\n in call at deprecated.jl:50\n in include at ./boot.jl:261\n in include_from_node1 at ./loading.jl:304\n in include at ./boot.jl:261\n in include_from_node1 at ./loading.jl:304\n in require at ./loading.jl:243\n in include at ./boot.jl:261\n in include_from_node1 at ./loading.jl:304\n in process_options at ./client.jl:308\n in _start at ./client.jl:411\nwhile loading /home/vagrant/.julia/v0.4/OnlineStats/src/summary/diff.jl, in expression starting on line 13\nWARNING: Base.FloatingPoint is deprecated, use AbstractFloat instead.\nDistributions\n  > Bernoulli\n  > Beta\n  > Binomial\n  > Cauchy\n  > Dirichlet\n  > Exponential\n  > Gamma\n  > LogNormal\n  > Multinomial\n  > MvNormal\n  > Normal\n  > Poisson\nOut of 130 total facts:\n  Verified: 129\n  Pending:  1\nNormalMix\n  > Offline: emstart() and em()\n  > Online: updatebatch!\n  > Online: update!\n  > Online: other\n20 facts verified.\nLinear Model\n  > LinReg\n  > StepwiseReg\n  > SparseReg\n326 facts verified.\nsweep!()\n10 facts verified.\nQuantile Regression\n  > QuantRegMM\n14 facts verified.\nLogReg\n  > LogRegSGD2\n  > LogRegMM\n10 facts verified.\nOnlinePCA\nOut of 1 total fact:\n  Pending:  1\nTest OnlineFLS\n8 facts verified.\nMean\n  > Mean\n  > Means\n44 facts verified.\nVariance\n  > Variance\n  > Variances\n76 facts verified.\nSummary\n28 facts verified.\nDiff\n22 facts verified.\nDiffs\n24 facts verified.\nExtrema\n24 facts verified.\nMoments\n8 facts verified.\nFiveNumberSummary\n6 facts verified.\nQuantiles\n  > QuantileSGD\n  > QuantileMM\n18 facts verified.\nCovarianceMatrix\n  > update! vs. updatebatch!\n  > PCA\n16 facts verified.\nBootstrap\n  > BernoulliBootstrap\n  > PoissonBootstrap\n  > FrozenBootstrap\n1 fact verified.\nSGD\n * L2Regression * \n  > NoPenalty\n  > L1Penalty\n  > L2Penalty\n  > ElasticNetPenalty\n * L1Regression * \n  > NoPenalty\n  > L1Penalty\n  > L2Penalty\n  > ElasticNetPenalty\n * QuantileRegression * \n  > NoPenalty\n  > L1Penalty\n  > L2Penalty\n  > ElasticNetPenalty\n * HuberRegression * \n  > NoPenalty\n  > L1Penalty\n  > L2Penalty\n  > ElasticNetPenalty\n * LogisticRegression * \n  > NoPenalty\n  > L1Penalty\n  > L2Penalty\n  > ElasticNetPenalty\n * SVMLike * \n  > NoPenalty\n  > L1Penalty\n  > L2Penalty\n  > ElasticNetPenalty\n2 facts verified.\nProxgrad\n * L2Regression * \n  > NoPenalty\n  > L1Penalty\n  > L2Penalty\n  > ElasticNetPenalty\n * L1Regression * \n  > NoPenalty\n  > L1Penalty\n  > L2Penalty\n  > ElasticNetPenalty\n * QuantileRegression * \n  > NoPenalty\n  > L1Penalty\n  > L2Penalty\n  > ElasticNetPenalty\n * HuberRegression * \n  > NoPenalty\n  > L1Penalty\n  > L2Penalty\n  > ElasticNetPenalty\n * LogisticRegression * \n  > NoPenalty\n  > L1Penalty\n  > L2Penalty\n  > ElasticNetPenalty\n * SVMLike * \n  > NoPenalty\n  > L1Penalty\n  > L2Penalty\n  > ElasticNetPenalty\n2 facts verified.\nRDA\n * L2Regression * \n  > NoPenalty\n  > L1Penalty\n  > L2Penalty\n  > ElasticNetPenalty\n * L1Regression * \n  > NoPenalty\n  > L1Penalty\n  > L2Penalty\n  > ElasticNetPenalty\n * QuantileRegression * \n  > NoPenalty\n  > L1Penalty\n  > L2Penalty\n  > ElasticNetPenalty\n * HuberRegression * \n  > NoPenalty\n  > L1Penalty\n  > L2Penalty\n  > ElasticNetPenalty\n * LogisticRegression * \n  > NoPenalty\n  > L1Penalty\n  > L2Penalty\n  > ElasticNetPenalty\n * SVMLike * \n  > NoPenalty\n  > L1Penalty\n  > L2Penalty\n  > ElasticNetPenalty\n2 facts verified.\nCommon\n  > Helper Functions\n  > Weighting\n  > onlinefit!()\n  > Show and print methods\nOutput here is messy for the sake of getting coverage for show and print\nOnlineStat: OnlineStats.Mean{OnlineStats.EqualWeighting}\n *        μ:  0.572755\n *     nobs:  100OnlineStats.Mean{OnlineStats.EqualWeighting}{μ=0.5727548826892743 nobs=100}[OnlineStats.Mean{OnlineStats.EqualWeighting}{μ=0.5727548826892743 nobs=100}, OnlineStats.Mean{OnlineStats.EqualWeighting}{μ=0.5727548826892743 nobs=100}]OnlineStats.BernoulliBootstrap{OnlineStats.OnlineStat}\nOnline Bootstrap of OnlineStats.Mean{OnlineStats.EqualWeighting} using function: mean()\n*  nreplicates = 1000\n*         nobs = 0\nOnline OnlineStats.FitNormal{OnlineStats.EqualWeighting}, nobs:100\nDistributions.Normal(μ=0.16958795673000795, σ=1.1113724892797034)  > Show DistributionStat\n  > Bias\n104 facts verified.\n$(Expr(:escape, quote  # /home/vagrant/.julia/v0.4/OnlineStats/src/react.jl, line 250:\n    function ##streamed#14620(INPUT1) # /home/vagrant/.julia/v0.4/OnlineStats/src/react.jl, line 251:\n        mean(update_get!(mn,abs(diff(update_get!(d,INPUT1)))))\n    end # /home/vagrant/.julia/v0.4/OnlineStats/src/react.jl, line 253:\n    ##streamed#14620\nend))\n$(Expr(:escape, quote  # /home/vagrant/.julia/v0.4/OnlineStats/src/react.jl, line 250:\n    function ##streamed#14649(INPUT1) # /home/vagrant/.julia/v0.4/OnlineStats/src/react.jl, line 251:\n        update_get!(m,diff(update_get!(d,INPUT1)))\n    end # /home/vagrant/.julia/v0.4/OnlineStats/src/react.jl, line 253:\n    ##streamed#14649\nend))\n$(Expr(:escape, quote  # /home/vagrant/.julia/v0.4/OnlineStats/src/react.jl, line 250:\n    function ##streamed#14652(INPUT1) # /home/vagrant/.julia/v0.4/OnlineStats/src/react.jl, line 251:\n        begin \n            $(Expr(:line, 55, symbol(\"/home/vagrant/.julia/v0.4/OnlineStats/test/react_test.jl\")))\n            df = diff(update_get!(d,INPUT1))\n            $(Expr(:line, 56, symbol(\"/home/vagrant/.julia/v0.4/OnlineStats/test/react_test.jl\")))\n            if nobs(d) > 1\n                mean(update_get!(m,df))\n            else \n                0.0\n            end\n        end\n    end # /home/vagrant/.julia/v0.4/OnlineStats/src/react.jl, line 253:\n    ##streamed#14652\nend))\nReact\n  > DiffMean1\nd: OnlineStats.Diff{Float64}{diff=-5.0 last=3.0 nobs=3}\nm: OnlineStats.Mean{OnlineStats.EqualWeighting}{μ=-0.6666666666666665 nobs=3}\n  > DiffMean2\nd: OnlineStats.Diff{Float64}{diff=-5.0 last=3.0 nobs=3}\nm: OnlineStats.Mean{OnlineStats.EqualWeighting}{μ=-1.0 nobs=2}\n  > 1 Arg Stream\n  > Regression\n  > Mapping pipe and currying\nOut of 7 total facts:\n  Verified: 6\n  Pending:  1\nINFO: OnlineStats tests passed\nINFO: Removing FactCheck v0.4.0\nINFO: Removing GLM v0.4.7\nINFO: Removing NumericFuns v0.2.3\n\n>>> End of log","licfile":"LICENSE.md","license":"MIT"}