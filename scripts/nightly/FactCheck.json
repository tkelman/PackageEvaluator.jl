{"gitdate":"2015-08-25 11:58:56 -0400","exit_code":"0","name":"FactCheck","jlver":"0.4","gitsha":"fadb498cba20600092290ff300d7f59e7a529d6b","status":"tests_pass","version":"0.4.0","url":"http://github.com/JuliaLang/FactCheck.jl","log":">>> 'Pkg.add(\"FactCheck\")' log\nINFO: Installing FactCheck v0.4.0\nINFO: Package database updated\nINFO: METADATA is out-of-date â€” you may not have the latest version of FactCheck\nINFO: Use `Pkg.update()` to get the latest versions of your packages\n\n>>> 'Pkg.test(\"FactCheck\")' log\nJulia Version 0.4.0-rc2+10\nCommit d8930a0 (2015-09-20 15:38 UTC)\nPlatform Info:\n  System: Linux (x86_64-unknown-linux-gnu)\n  CPU: Intel(R) Core(TM) i7 CPU         960  @ 3.20GHz\n  WORD_SIZE: 64\n  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)\n  LAPACK: libopenblas\n  LIBM: libopenlibm\n  LLVM: libLLVM-3.3\nINFO: Testing FactCheck\nTesting Result counting and printing, not actual errors!\nTest error pathways\n  Success :: (line:-1) :: I will never be seen :: fact was true\n    Expression: 1 --> 1\n      Expected: 1\n      Occurred: 1\n  Failure :: (line:-1) :: one doesn't equal two! :: fact was false\n    Expression: 1 --> 2\n      Expected: 2\n      Occurred: 1\n  Error :: (line:-1) :: domains are tricky\n    Expression: 2 ^ -1 --> 0.5\n    DomainError:\n    Cannot raise an integer x to a negative power -n. \n    Make x a float by adding a zero decimal (e.g. 2.0^-n instead of 2^-n), or write 1/x^n, float(x)^-n, or (x//1)^-n.\n     in power_by_squaring at ./intfuncs.jl:82\n     in ^ at ./intfuncs.jl:106\n     in anonymous at /home/vagrant/.julia/v0.4/FactCheck/src/FactCheck.jl:271\n     in do_fact at /home/vagrant/.julia/v0.4/FactCheck/src/FactCheck.jl:333\n     [inlined code] from /home/vagrant/.julia/v0.4/FactCheck/src/FactCheck.jl:271\n     in anonymous at /home/vagrant/.julia/v0.4/FactCheck/test/runtests.jl:21\n     in facts at /home/vagrant/.julia/v0.4/FactCheck/src/FactCheck.jl:448\n     in include at ./boot.jl:261\n     in include_from_node1 at ./loading.jl:304\n     in process_options at ./client.jl:308\n     in _start at ./client.jl:411\n  Pending\nOut of 4 total facts:\n  Verified: 1\n  Failed:   1\n  Errored:  1\n  Pending:  1\nDone, begin actual FactCheck tests\nTesting core functionality\n11 facts verified.\nTesting invalid @fact_throws macro\n3 facts verified.\nTesting 'context'\n  > context will increase LEVEL and set contexts\n  > \n  > nested context\n    > inner\n'facts' doesn't increase LEVEL\n1 fact verified.\n  > will execute the function which is passed to the 'context'\n    > Run f\n  > indent by current LEVEL\n12 facts verified.\nFactCheck assertion helper functions\n  > `not` works for values and functions\n  > `exactly` can be used to check object equality\n  > `roughly` compares numbers... roughly\n  > `roughly` compares matrixes... roughly\n  > `anyof` compares with all arguments\n  > `anyof` works for functions\n  > less_than\n  > less_than_or_equal\n  > greater_than\n  > greater_than_or_equal\n27 facts verified.\nINFO: FactCheck tests passed\n\n>>> End of log","licfile":"LICENSE.md","license":"MIT"}