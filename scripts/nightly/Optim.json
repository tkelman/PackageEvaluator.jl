{"gitdate":"2015-06-18 14:08:25 -0700","exit_code":"0","name":"Optim","jlver":"0.4","gitsha":"e9056b1b6bd45c72019b4baf0d4f9efe2119a739","status":"tests_pass","version":"0.4.2","url":"http://github.com/JuliaOpt/Optim.jl","log":">>> 'Pkg.add(\"Optim\")' log\nINFO: Installing Calculus v0.1.10\nINFO: Installing DualNumbers v0.1.3\nINFO: Installing NaNMath v0.1.0\nINFO: Installing Optim v0.4.2\nINFO: Package database updated\n\n>>> 'Pkg.test(\"Optim\")' log\nJulia Version 0.4.0-rc2+10\nCommit d8930a0 (2015-09-20 15:38 UTC)\nPlatform Info:\n  System: Linux (x86_64-unknown-linux-gnu)\n  CPU: Intel(R) Core(TM) i7-6700K CPU @ 4.00GHz\n  WORD_SIZE: 64\n  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Prescott)\n  LAPACK: libopenblas\n  LIBM: libopenlibm\n  LLVM: libLLVM-3.3\nINFO: Testing Optim\nRunning tests:\n * bfgs.jl\n * gradient_descent.jl\n * momentum_gradient_descent.jl\n * grid_search.jl\n * l_bfgs.jl\n * levenberg_marquardt.jl\nWARNING: Problem solving for delta_x: predicted residual increase.\n4.179417821222934 (predicted_residual) >\n3.377493711254356 (residual) + 8.881784197001252e-16 (eps)\nWARNING: Problem solving for delta_x: predicted residual increase.\n2.536303807247211 (predicted_residual) >\n2.535873755130537 (residual) + 4.440892098500626e-16 (eps)\nWARNING: Problem solving for delta_x: predicted residual increase.\n2.472965792097425 (predicted_residual) >\n1.8100681039489024 (residual) + 4.440892098500626e-16 (eps)\n * newton.jl\n * cg.jl\n * nelder_mead.jl\n * optimize.jl\n * simulated_annealing.jl\n * interpolating_line_search.jl\n * api.jl\n * golden_section.jl\n * brent.jl\n * type_stability.jl\n * array.jl\n * constrained.jl\nINFO: Optim tests passed\n\n>>> End of log","licfile":"LICENSE.md","license":"MIT"}